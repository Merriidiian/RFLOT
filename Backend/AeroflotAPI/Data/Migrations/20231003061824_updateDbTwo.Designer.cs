// <auto-generated />
using System;
using AeroflotAPI.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AeroflotAPI.Data.Migrations
{
    [DbContext(typeof(RfidContext))]
    [Migration("20231003061824_updateDbTwo")]
    partial class updateDbTwo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AeroflotAPI.Models.Equip", b =>
                {
                    b.Property<string>("RfId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DataExploitationBegin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DataExploitationFinish")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EquipmentInformation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdZone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlanePlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("RfId");

                    b.HasIndex("RfId")
                        .IsUnique();

                    b.ToTable("Equips");
                });

            modelBuilder.Entity("AeroflotAPI.Models.People", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("AeroflotAPI.Models.Zone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("CheckFlag")
                        .HasColumnType("boolean");

                    b.Property<string>("IdPlane")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameChecker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Zones");
                });
#pragma warning restore 612, 618
        }
    }
}
